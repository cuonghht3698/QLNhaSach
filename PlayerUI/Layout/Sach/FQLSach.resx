<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="label1.GenerateMember" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ptbAnh.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>